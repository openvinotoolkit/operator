kind: CustomResourceDefinition
apiVersion: apiextensions.k8s.io/v1
metadata:
  creationTimestamp: null
  name: modelservers.intel.com
spec:
  group: intel.com
  names:
    kind: ModelServer
    listKind: ModelServerList
    plural: modelservers
    singular: modelserver
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: >-
            ModelServer is the Schema for the modelserver API representing
            OpenVINO Model Server instances
          type: object
          properties:
            apiVersion:
              description: >-
                APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More
                info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: >-
                Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase.
                More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of ModelServers
              type: object
              required:
                - image_name
              properties:
                image_name:
                  description: Model Server docker image to be used
                  type: string
                  default: >-
                    registry.connect.redhat.com/intel/openvino-model-server:latest
                model_config:
                  description: Predefined config to be used by Model Server
                  type: object
                  properties:
                    config_configmap_name:
                      type: string
                    model_config:
                      type: string
                model_settings:
                  type: object
                  description: Fill model settings if model config is not used
                  properties:
                    model_name:
                      description: Name of the model loaded to Model Server
                      type: string
                      default: resnet
                    model_path:
                      description: Path to the model files
                      type: string
                      default: 'gs://ovms-public-eu/resnet50-binary'
                    shape:
                      description: Resets models shape (model must support reshaping). If set, batch_size parameter is ignored
                      type: string
                    batch_size:
                      description: Resets models batchsize, int value or auto. This parameter will be ignored if shape is set
                      type: string
                    target_device:
                      description: Target device to run the inference
                      type: string
                    plugin_config:
                      description: A dictionary of plugin configuration keys and their values
                      type: string
                      default: '{"CPU_THROUGHPUT_STREAMS":"1"}'
                    model_version_policy:
                      description: Model version policy
                      type: string
                      default: '{"latest": { "num_versions":1 }}'
                    layout:
                      description: Resets model layout
                      type: string
                    nireq:
                      description: Size of inference request queue for model executions
                      type: integer
                      format: int32
                    stateful:
                      type: object
                      description: Stateful models settings
                      properties:
                        stateful:
                          description: Flag indicating model is stateful
                          type: boolean
                          default: false
                        idle_sequence_cleanup:
                          description: Flag indicating if model is subject to sequence cleaner scans
                          type: boolean
                          default: true
                        low_latency_transformation:
                          description: Flag indicating that Model Server should perform low latency transformation on that model
                          type: boolean
                          default: false
                        max_sequence_number:
                          description: Determines how many sequences can be processed concurrently by one model instance. When that value is reached, attempt to start a new sequence will result in error.
                          type: integer
                          format: int32
                server:
                  type: object
                  properties:
                    file_system_poll_wait_seconds:
                      description: Time interval between config and model versions changes detection
                      type: integer
                      format: int32
                      default: 0
                    log_level:
                      description: Serving log level
                      type: string
                      default: INFO
                      enum:
                        - INFO
                        - DEBUG
                        - ERROR
                        - TRACE
                    log_path:
                      description: Optional path to the log file
                      type: string
                    grpc_workers:
                      description: Number of gRPC servers. Default 1. Increase for multi client, high throughput scenarios
                      type: integer
                      format: int32
                      default: 1
                    ports:
                      type: object
                      properties:
                        grpc_port:
                          description: gRPC server port
                          type: integer
                          format: int32
                          default: 8080
                        grpc_bind_address:
                          description: Network interface address to bind to for the gRPC API
                          type: string
                          default: 0.0.0.0
                        rest_port:
                          description: REST server port
                          type: integer
                          format: int32
                          default: 8081
                    rest_workers:
                      description: Number of worker threads in REST server - has no effect if rest_port is not set. Default value depends on number of CPUs.
                      type: integer
                      format: int32
                    sequence_cleaner_poll_wait_minutes:
                      description: Time interval between two consecutive sequence cleaner scans. Default is 5. Zero value disables sequence cleaner.
                      type: integer
                      format: int32
                      default: 5
                resources:
                  description: Resources for Model Serving server
                  type: object
                  properties:
                    limits:
                      type: object
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                    requests:
                      type: object
                      properties:
                        cpu:
                          type: string
                        memory:
                          type: string
                model_storage_configuration:
                  type: object
                  description: Access definition for model storage
                  properties:
                    models_host_path:
                      type: string
                    models_volume_claim:
                      type: string
                    security_context:
                      type: object
                      description: Additional security context settings
                      properties:
                        runAsUser:
                          type: string
                        runAsGroup:
                          type: string
                    aws:
                      type: object
                      description: AWS S3 and Minio storage path requirements
                      properties:
                        aws_secret_access_key:
                          type: string
                          description: Aws secret access key
                        aws_access_key_id:
                          type: string
                          description: Aws access key
                        aws_region:
                          type: string
                          description: Aws region
                        s3_compat_api_endpoint:
                          type: string
                          description: Optional for AWS s3 storage and mandatory for Minio and other s3 compatible storage types
                        aws_profile:
                          type: string
                          description: Aws profile credentials file in the docker image
                    gcs:
                      type: object
                      description: Google Cloud Storage path requirements
                      properties:
                        gcp_creds_secret_name:
                          type: string
                          description: Secret name including Google Cloud Storage access token
                    azure:
                      type: object
                      description: Azure storage settings
                      properties:
                        azure_storage_connection_string:
                          type: string
                          description: Security setting to start a Docker container with support for Azure Storage paths to your model
                    https_proxy:
                      description: Serving https proxy
                      type: string
                    http_proxy:
                      description: Serving http proxy
                      type: string
              x-kubernetes-preserve-unknown-fields: true
            status:
              description: Status defines the observed state of Ovms
              type: object
              x-kubernetes-preserve-unknown-fields: true
      subresources:
        status: {}
  conversion:
    strategy: None
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
